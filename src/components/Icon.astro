---
import { parse } from 'node-html-parser';

export interface Props {
    icon: string;
}

async function getSVG(name: string) {
    const filepath = `/src/svg/${name}.svg`;
    let files = import.meta.glob<string>('../icons/**/*.svg', { as: 'raw' });
    const svgs = {};
    for (const path in files) {
        const content = await files[path]();
        const absolutePath = path.replace('../icons', '/src/svg');
        svgs[absolutePath] = content;
    }

    if (!(filepath in svgs)) {
        throw new Error(`${filepath} not found`);
    }

    const root = parse(svgs[filepath]);

    const svg = root.querySelector('svg');

    //console.log(svg);

    const { attributes, innerHTML } = svg;
    
    // console.log(attributes);
    // console.log(innerHTML);
    return {
        attributes,
        innerHTML,
    };
}

const { icon, ...attributes } = Astro.props as Props;
const { attributes: baseAttributes, innerHTML } = await getSVG(icon);

const svgAttributes = { ...baseAttributes, ...attributes };


---

<svg
    {...svgAttributes}
    set:html={innerHTML}
></svg>